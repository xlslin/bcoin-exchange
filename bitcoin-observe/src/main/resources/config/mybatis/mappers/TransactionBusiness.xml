<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="transactionBusiness">

	<!-- 用于select查询公用抽取的列 -->
	<sql id="transactionBusinessColumns">
    	<if test="null!=id">
    		and ID = #{id}
    	</if>
    	<if test="null!=blockNumber">
    		and BLOCK_NUMBER = #{blockNumber}
    	</if>
    	<if test="null!=blockHash">
    		and BLOCK_HASH = #{blockHash}
    	</if>
    	<if test="null!=txHash">
    		and TX_HASH = #{txHash}
    	</if>
    	<if test="null!=transactionId">
    		and TRANSACTION_ID = #{transactionId}
    	</if>
    	<if test="null!=vioIndex">
    		and VIO_INDEX = #{vioIndex}
    	</if>
    	<if test="null!=coinType">
    		and COIN_TYPE = #{coinType}
    	</if>
    	<if test="null!=txFrom">
    		and TX_FROM = #{txFrom}
    	</if>
    	<if test="null!=txTo">
    		and TX_TO = #{txTo}
    	</if>
    	<if test="null!=amount">
    		and AMOUNT = #{amount}
    	</if>
    	<if test="null!=fee">
    		and FEE = #{fee}
    	</if>
    	<if test="null!=type">
    		and TYPE = #{type}
    	</if>
    	<if test="null!=status">
    		and STATUS = #{status}
    	</if>
    	<if test="null!=settleStatus">
    		and SETTLE_STATUS = #{settleStatus}
    	</if>
    	<if test="null!=txStatus">
    		and TX_STATUS = #{txStatus}
    	</if>
    	<if test="null!=txTime">
    		and TX_TIME = #{txTime}
    	</if>
    	<if test="null!=createTime">
    		and CREATE_TIME = #{createTime}
    	</if>
    	<if test="null!=modifyTime">
    		and MODIFY_TIME = #{modifyTime}
    	</if>
	</sql>
	
	<sql id="transactionBusinessSetColumns">
		    <if test="null!=id">
		    ID = #{id},
		    </if>
		    <if test="null!=blockNumber">
		    BLOCK_NUMBER = #{blockNumber},
		    </if>
		    <if test="null!=blockHash">
		    BLOCK_HASH = #{blockHash},
		    </if>
		    <if test="null!=txHash">
		    TX_HASH = #{txHash},
		    </if>
		    <if test="null!=transactionId">
		    TRANSACTION_ID = #{transactionId},
		    </if>
		    <if test="null!=vioIndex">
		    VIO_INDEX = #{vioIndex},
		    </if>
		    <if test="null!=coinType">
		    COIN_TYPE = #{coinType},
		    </if>
		    <if test="null!=txFrom">
		    TX_FROM = #{txFrom},
		    </if>
		    <if test="null!=txTo">
		    TX_TO = #{txTo},
		    </if>
		    <if test="null!=amount">
		    AMOUNT = #{amount},
		    </if>
		    <if test="null!=fee">
		    FEE = #{fee},
		    </if>
		    <if test="null!=type">
		    TYPE = #{type},
		    </if>
		    <if test="null!=status">
		    STATUS = #{status},
		    </if>
		    <if test="null!=settleStatus">
		    SETTLE_STATUS = #{settleStatus},
		    </if>
		    <if test="null!=txStatus">
		    TX_STATUS = #{txStatus},
		    </if>
		    <if test="null!=txTime">
		    TX_TIME = #{txTime},
		    </if>
		    <if test="null!=createTime">
		    CREATE_TIME = #{createTime},
		    </if>
		    <if test="null!=modifyTime">
		    MODIFY_TIME = #{modifyTime},
		    </if>
	</sql>

	<resultMap id="transactionBusinessResultMap" type="com.sharingif.blockchain.bitcoin.block.model.entity.TransactionBusiness">
        <result property="id" column="ID"/>
        <result property="blockNumber" column="BLOCK_NUMBER"/>
        <result property="blockHash" column="BLOCK_HASH"/>
        <result property="txHash" column="TX_HASH"/>
        <result property="transactionId" column="TRANSACTION_ID"/>
        <result property="vioIndex" column="VIO_INDEX"/>
        <result property="coinType" column="COIN_TYPE"/>
        <result property="txFrom" column="TX_FROM"/>
        <result property="txTo" column="TX_TO"/>
        <result property="amount" column="AMOUNT"/>
        <result property="fee" column="FEE"/>
        <result property="type" column="TYPE"/>
        <result property="status" column="STATUS"/>
        <result property="settleStatus" column="SETTLE_STATUS"/>
        <result property="txStatus" column="TX_STATUS"/>
        <result property="txTime" column="TX_TIME"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="modifyTime" column="MODIFY_TIME"/>
	</resultMap>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert">
        INSERT INTO TRANSACTION_BUSINESS (
        	ID
        	,BLOCK_NUMBER
        	,BLOCK_HASH
        	,TX_HASH
        	,TRANSACTION_ID
        	,VIO_INDEX
        	,COIN_TYPE
        	,TX_FROM
        	,TX_TO
        	,AMOUNT
        	,FEE
        	,TYPE
        	,STATUS
        	,SETTLE_STATUS
        	,TX_STATUS
        	,TX_TIME
        	,CREATE_TIME
        	,MODIFY_TIME
        ) VALUES (
        	#{id}
        	,#{blockNumber}
        	,#{blockHash}
        	,#{txHash}
        	,#{transactionId}
        	,#{vioIndex}
        	,#{coinType}
        	,#{txFrom}
        	,#{txTo}
        	,#{amount}
        	,#{fee}
        	,#{type}
        	,#{status}
        	,#{settleStatus}
        	,#{txStatus}
        	,#{txTime}
        	,#{createTime}
        	,#{modifyTime}
        )
	</insert>
	
	<delete id="deleteById">
	    DELETE FROM
	    	TRANSACTION_BUSINESS 
	    WHERE
	    ID = #{id} 
    </delete>
    
    <delete id="deleteByCondition">
	    DELETE FROM
	    	TRANSACTION_BUSINESS 
	    WHERE
	    	1=1
		    <include refid="transactionBusinessColumns" />
    </delete>
    
	<update id="updateById">
	    UPDATE
	    	TRANSACTION_BUSINESS 
        <set>
	        <include refid="transactionBusinessSetColumns" />
		</set>
	    WHERE
	    ID = #{id} 
	</update>
	
    <select id="queryById" resultMap="transactionBusinessResultMap">
		SELECT
			ID
			,BLOCK_NUMBER
			,BLOCK_HASH
			,TX_HASH
			,TRANSACTION_ID
			,VIO_INDEX
			,COIN_TYPE
			,TX_FROM
			,TX_TO
			,AMOUNT
			,FEE
			,TYPE
			,STATUS
			,SETTLE_STATUS
			,TX_STATUS
			,TX_TIME
			,CREATE_TIME
			,MODIFY_TIME
		FROM
			TRANSACTION_BUSINESS 
		WHERE 
			ID = #{id} 
	</select>
	
	<select id="queryList" resultMap="transactionBusinessResultMap">
		SELECT
			ID
			,BLOCK_NUMBER
			,BLOCK_HASH
			,TX_HASH
			,TRANSACTION_ID
			,VIO_INDEX
			,COIN_TYPE
			,TX_FROM
			,TX_TO
			,AMOUNT
			,FEE
			,TYPE
			,STATUS
			,SETTLE_STATUS
			,TX_STATUS
			,TX_TIME
			,CREATE_TIME
			,MODIFY_TIME
		FROM
			TRANSACTION_BUSINESS
		WHERE
			1=1
			<include refid="transactionBusinessColumns" />
		ORDER BY
			ID
	</select>
	
	<select id="queryAll" resultMap="transactionBusinessResultMap">
		SELECT
			ID
			,BLOCK_NUMBER
			,BLOCK_HASH
			,TX_HASH
			,TRANSACTION_ID
			,VIO_INDEX
			,COIN_TYPE
			,TX_FROM
			,TX_TO
			,AMOUNT
			,FEE
			,TYPE
			,STATUS
			,SETTLE_STATUS
			,TX_STATUS
			,TX_TIME
			,CREATE_TIME
			,MODIFY_TIME
		FROM
			TRANSACTION_BUSINESS 
		ORDER BY
			ID
	</select>
	
	<select id="queryPaginationListCount" resultType="Integer">
		SELECT
			COUNT(0)
		FROM
			TRANSACTION_BUSINESS 
		WHERE
			1=1 
			<include refid="transactionBusinessColumns" />
	</select>
	
	<select id="queryPaginationList" parameterType="PaginationCondition" resultMap="transactionBusinessResultMap">
		SELECT
			ID
			,BLOCK_NUMBER
			,BLOCK_HASH
			,TX_HASH
			,TRANSACTION_ID
			,VIO_INDEX
			,COIN_TYPE
			,TX_FROM
			,TX_TO
			,AMOUNT
			,FEE
			,TYPE
			,STATUS
			,SETTLE_STATUS
			,TX_STATUS
			,TX_TIME
			,CREATE_TIME
			,MODIFY_TIME
		FROM
			TRANSACTION_BUSINESS
		WHERE
			1=1
			<include refid="transactionBusinessColumns" />
		ORDER BY
			ID
	</select>

	<update id="updateSettleStatusByAddressCoinTypeBlockNumberSettleStatus">
	<![CDATA[
		UPDATE
			TRANSACTION_BUSINESS
		SET
			SETTLE_STATUS = #{status}
		WHERE
			(TX_FROM = #{txFrom} OR TX_TO = #{txTo})
		AND
			COIN_TYPE = #{coinType}
		AND
			BLOCK_NUMBER <= #{blockNumber}
		AND
			SETTLE_STATUS = #{settleStatus}
	]]>
	</update>

	<select id="queryCountByAddressCoinTypeSettleStatus" resultType="Integer">
		SELECT
			COUNT(0)
		FROM
			TRANSACTION_BUSINESS
		WHERE
			(TX_FROM = #{txFrom} OR TX_TO = #{txTo})
		AND
			COIN_TYPE = #{coinType}
		AND
			SETTLE_STATUS != #{settleStatus}
	</select>

	<update id="updateByBlockNumberBlockHash">
		UPDATE
		TRANSACTION_BUSINESS
			<set>
				<include refid="transactionBusinessSetColumns" />
			</set>
		WHERE
			BLOCK_NUMBER = #{blockNumber}
		AND
			BLOCK_HASH = #{blockHash}
	</update>
	
</mapper>

